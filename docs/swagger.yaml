basePath: /
definitions:
  api.LivenessResponse:
    properties:
      healthy:
        type: boolean
    type: object
  api.ReadinessResponse:
    properties:
      database:
        description: won't be shown if empty
        type: string
      healthy:
        type: boolean
    type: object
  ent.Account:
    properties:
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      deleted_at:
        description: DeletedAt holds the value of the "deleted_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.AccountEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the AccountQuery when eager-loading is set.
      email:
        description: Email holds the value of the "email" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      password:
        description: Password holds the value of the "password" field.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  ent.AccountEdges:
    properties:
      user:
        allOf:
        - $ref: '#/definitions/ent.User'
        description: User holds the value of the user edge.
    type: object
  ent.User:
    properties:
      bio:
        description: Bio holds the value of the "bio" field.
        type: string
      created_at:
        description: CreatedAt holds the value of the "created_at" field.
        type: string
      deleted_at:
        description: DeletedAt holds the value of the "deleted_at" field.
        type: string
      edges:
        allOf:
        - $ref: '#/definitions/ent.UserEdges'
        description: |-
          Edges holds the relations/edges for other nodes in the graph.
          The values are being populated by the UserQuery when eager-loading is set.
      full_name:
        description: FullName holds the value of the "full_name" field.
        type: string
      id:
        description: ID of the ent.
        type: string
      updated_at:
        description: UpdatedAt holds the value of the "updated_at" field.
        type: string
    type: object
  ent.UserEdges:
    properties:
      account:
        allOf:
        - $ref: '#/definitions/ent.Account'
        description: Account holds the value of the account edge.
    type: object
  user.LoginCommand:
    properties:
      email:
        type: string
      password:
        type: string
    type: object
  user.RegisterCommand:
    properties:
      bio:
        type: string
      email:
        type: string
      fullName:
        type: string
      password:
        type: string
    type: object
  user.TokensResponse:
    properties:
      accessToken:
        type: string
      refreshToken:
        type: string
    type: object
info:
  contact: {}
  title: Blog API
  version: "1.0"
paths:
  /health/live:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.LivenessResponse'
      summary: Check if application is live
      tags:
      - health
  /health/ready:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/api.ReadinessResponse'
      summary: Check if application is ready to serve traffic
      tags:
      - health
  /users/login:
    post:
      consumes:
      - application/json
      parameters:
      - description: Login payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.LoginCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.TokensResponse'
      summary: Login
      tags:
      - user
  /users/me:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/ent.User'
      security:
      - Authorization: []
      summary: Get current user
      tags:
      - user
  /users/register:
    post:
      consumes:
      - application/json
      parameters:
      - description: Register payload
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/user.RegisterCommand'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user.TokensResponse'
      summary: Register new user
      tags:
      - user
securityDefinitions:
  Authorization:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
